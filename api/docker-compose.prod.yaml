name: file-manager
services:
  backend:
    container_name: "file-manager"
    image: file-manager:latest
    depends_on:
      - database
      - minio
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PORT=$PORT
      - JWT_SECRET=$JWT_SECRET
      - JWT_AUD=$JWT_AUD
      - JWT_ISS=$JWT_ISS
      - BASE_APP_URL=$BASE_APP_URL
      - MINIO_ROOT_USER=$MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD
      - MINIO_BUCKET=$MINIO_BUCKET
      - MINIO_USE_SSL=$MINIO_USE_SSL
      - MINIO_PORT=$MINIO_PORT
      - ALLOWED_ORIGINS=$ALLOWED_ORIGINS
      - ALLOWED_WILDCARD_DOMAINS=$ALLOWED_WILDCARD_DOMAINS
      - EMAIL_PROVIDER=$EMAIL_PROVIDER
      - EMAIL_FROM=$EMAIL_FROM
      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      - AWS_REGION=$AWS_REGION
      - DB_URL=$DB_URL
      - MINIO_ENDPOINT=$MINIO_ENDPOINT
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.https-0-ekkoc0c0co4g8gg8s4sg8gwo.rule=HostRegexp(`^.+\.api\.docma\.yilmer\.com$`)
      - traefik.http.routers.https-0-ekkoc0c0co4g8gg8s4sg8gwo.entryPoints=https
      - traefik.http.routers.https-0-ekkoc0c0co4g8gg8s4sg8gwo.middlewares=gzip
      - traefik.http.routers.https-0-ekkoc0c0co4g8gg8s4sg8gwo.service=https-0-ekkoc0c0co4g8gg8s4sg8gwo
      - traefik.http.routers.https-0-ekkoc0c0co4g8gg8s4sg8gwo.tls.certresolver=letsencrypt
      - traefik.http.services.https-0-ekkoc0c0co4g8gg8s4sg8gwo.loadbalancer.server.port=3000
      - traefik.http.routers.https-0-ekkoc0c0co4g8gg8s4sg8gwo.tls=true
      - traefik.http.routers.http-0-ekkoc0c0co4g8gg8s4sg8gwo.rule=HostRegexp(`^.+\.api\.docma\.yilmer\.com$`)
      - traefik.http.routers.http-0-ekkoc0c0co4g8gg8s4sg8gwo.entryPoints=http
      - traefik.http.routers.http-0-ekkoc0c0co4g8gg8s4sg8gwo.middlewares=redirect-to-https
      - caddy_0.encode=zstd gzip
      - caddy_0.handle_path.0_reverse_proxy={{upstreams 3000}}
      - caddy_0.handle_path=*
      - caddy_0.header=-Server
      - caddy_0.try_files={path} /index.html /index.php
      - caddy_0=://
      - caddy_ingress_network=coolify
  migrate:
    container_name: "file-manager-migrate"
    image: file-manager:latest
    command:
      - "start:migrate"
    depends_on:
      - database
      - backend
    environment:
      DB_URL: $DB_URL
  database:
    container_name: database
    image: postgres:16.8-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_SCHEMA: $POSTGRES_SCHEMA
    volumes:
      - database_data:/var/lib/postgresql
  minio:
    container_name: minio
    image: quay.io/minio/minio
    restart: unless-stopped
    environment:
      - MINIO_SERVER_URL=$MINIO_SERVER_URL
      - MINIO_BROWSER_REDIRECT_URL=$MINIO_BROWSER_REDIRECT_URL
      - MINIO_ROOT_USER=$MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
volumes:
  database_data:
  minio_data:
